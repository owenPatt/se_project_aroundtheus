!function(){"use strict";class t{constructor(t,e,s,i,r){let{name:n,link:a,_id:o,isLiked:l}=t;this.name=n,this.link=a,this.id=o,this._initialState=l,this._cardSelector=e,this._handleImageClick=s,this._handleDeleteBtnClick=i,this._handleLikeBtnClick=r}setLikeBtnState=()=>{this._likeBtn.classList.toggle("card__like-button_active")};isLiked=()=>this._likeBtn.classList.contains("card__like-button_active");handleDelete=()=>{this._cardElement.remove(),this._cardElement=null};_setEventListeners(){this._likeBtn.addEventListener("click",(()=>{this._handleLikeBtnClick(this)})),this._deleteBtn.addEventListener("click",(()=>{this._handleDeleteBtnClick(this)})),this._imageEl.addEventListener("click",(()=>{this._handleImageClick(this)}))}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0),this._likeBtn=this._cardElement.querySelector(".card__like-button"),this._deleteBtn=this._cardElement.querySelector(".card__delete-button"),this._imageEl=this._cardElement.querySelector(".card__image"),this._titleEl=this._cardElement.querySelector(".card__title"),this._setEventListeners(),this._imageEl.src=this.link,this._imageEl.alt=this.name,this._titleEl.textContent=this.name,this._initialState&&this.setLikeBtnState(),this._cardElement}}class e{constructor(t,e){this._config=t,this._formEl=e}_showInputError(t){const e=this._formEl.querySelector(`#${t.id}-error`);t.classList.add(this._config.inputErrorClass),e.classList.add(this._config.errorMessageClassVisible),e.textContent=t.validationMessage}_hideInputError(t){this._formEl.querySelector(`#${t.id}-error`).classList.remove(this._config.errorMessageClassVisible),t.classList.remove(this._config.inputErrorClass)}_checkValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_allInputsValid(){return this._inputEls.every((t=>t.validity.valid))}_toggleButtonState(){this._allInputsValid()?(this._submitButton.classList.remove(this._config.inactiveButtonClass),this._submitButton.removeAttribute("disabled")):(this._submitButton.classList.add(this._config.inactiveButtonClass),this._submitButton.setAttribute("disabled",!0))}_setEventListeners(){this._submitButton=this._formEl.querySelector(this._config.submitButtonSelector),this._toggleButtonState(),this._inputEls.forEach((t=>{t.addEventListener("input",(e=>{this._checkValidity(t),this._toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(t=>{t.preventDefault()})),this._inputEls=[...this._formEl.querySelectorAll(this._config.inputSelector)],this._setEventListeners()}setButtonState(){this._toggleButtonState()}clearValidationErrors(){this._inputEls.forEach((t=>{this._hideInputError(t)}))}}class s{constructor(t,e){let{items:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this.addItem(this._renderer(t))}))}addItem(t){this._container.insertAdjacentElement("afterbegin",t)}}class i{constructor(t){this._popupEl=document.querySelector(t)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};open(){this._popupEl.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupEl.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupEl.addEventListener("mousedown",(t=>{(t.target.classList.contains("modal_opened")||t.target.classList.contains("modal__close"))&&this.close()}))}}class r extends i{constructor(t,e){super(t),this._handleSubmitForm=e,this._formEl=this._popupEl.querySelector(".modal__form"),this._inputEls=Array.from(this._popupEl.querySelectorAll(".modal__item")),this._submitBtn=this._popupEl.querySelector(".modal__button"),this._submitBtnText=this._submitBtn.textContent}_getInputValues(){const t={};return this._inputEls.forEach((e=>{t[e.name]=e.value})),t}renderLoading(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitBtn.textContent=t?e:this._submitBtnText}setEventListeners(){super.setEventListeners(),this._formEl.addEventListener("submit",(t=>{this._handleSubmitForm(t,this._getInputValues())}))}setInputValues(t){this._inputEls.forEach((e=>{e.value=t[e.name]}))}close(){super.close(),this._formEl.reset()}}const n=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-avatar"),o=document.querySelector("#add-card-button"),l={},{profileFormName:c,avatarFormName:d,addCardFormName:h}={profileFormName:"profile-modal-form",addCardFormName:"card-modal-form",avatarFormName:"avatar-modal-form"};var _;console.log(c,d,h),_={formSelector:".modal__form",inputSelector:".modal__item",submitButtonSelector:".modal__button",errorMessageClass:"modal__error",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__item_type_error",errorMessageClassVisible:"modal__error_visible"},Array.from(document.querySelectorAll(_.formSelector)).forEach((t=>{const s=new e(_,t),i=t.getAttribute("name");l[i]=s,s.enableValidation()}));const u=new class{constructor(t){this._baseUrl=t.baseUrl,this._headers=t.headers}_checkResponse(t){return t.ok?t.json():Promise.reject(`Error: ${t.status}`)}_request(t,e,s){return fetch(t,{method:e,headers:this._headers,body:JSON.stringify(s)}).then(this._checkResponse)}getInitialCards(){return this._request(`${this._baseUrl}/cards`,"GET").then((t=>t))}getCurrentUser(){return this._request(`${this._baseUrl}/users/me`,"GET").then((t=>t))}updateUser(t,e){return this._request(`${this._baseUrl}/users/me`,"PATCH",{name:t,about:e}).then((t=>{console.log(t)}))}updateAvatar(t){return this._request(`${this._baseUrl}/users/me/avatar`,"PATCH",{avatar:t}).then((t=>{console.log(t)}))}createCard(t,e){return this._request(`${this._baseUrl}/cards`,"POST",{name:t,link:e})}deleteCard(t){return this._request(`${this._baseUrl}/cards/${t}`,"DELETE").then((t=>{console.log(t)}))}likeCard(t){return this._request(`${this._baseUrl}/cards/${t}/likes`,"PUT").then((t=>{console.log(t)}))}dislikeCard(t){return this._request(`${this._baseUrl}/cards/${t}/likes`,"DELETE").then((t=>{console.log(t)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c2b0fb8f-5e2c-45d3-9e40-bbe48905b446","content-type":"application/json"}});let m;u.getInitialCards().then((t=>{m=new s({items:t,renderer:y},".cards__list"),m.renderItems()})).catch(B);const p=new r("#profile-edit-modal",(function(t,e){let{name:s,description:i}=e;t.preventDefault(),S((function(){return u.updateUser(s,i).then((()=>{b.setUserInfo(s,i)}))}),p)})),E=new r("#card-add-modal",(function(t,e){t.preventDefault(),S((function(){return u.createCard(e.name,e.link).then((t=>{e._id=t._id,m.addItem(y(e))}))}),E)})),v=new r("#avatar-modal",(function(t,e){let{link:s}=e;t.preventDefault(),S((function(){return u.updateAvatar(s).then((()=>{b.setAvatar(s)}))}),v)})),f=new class extends i{constructor(t){super(t),this._pictureEl=this._popupEl.querySelector(".modal__image"),this._captionEl=this._popupEl.querySelector(".modal__title")}open(t,e){this._pictureEl.src=t,this._pictureEl.alt=e,this._captionEl.innerText=e,super.open()}}("#picture-modal"),g=new class extends i{constructor(t,e){super(t),this._handleButtonClick=e,this._button=this._popupEl.querySelector(".modal__button")}setEventListeners(){super.setEventListeners(),this._button.addEventListener("click",(()=>{this._handleButtonClick(this._calledEl)}))}open(t){super.open(),this._calledEl=t}close(){super.close(),this._calledEl=null}}("#card-delete-modal",(function(t){u.deleteCard(t.id).then((()=>{t.handleDelete(),g.close()})).catch(B)}));p.setEventListeners(),E.setEventListeners(),v.setEventListeners(),f.setEventListeners(),g.setEventListeners();const b=new class{constructor(t){let{nameSelector:e,descriptionSelector:s,avatarSelector:i}=t;this._nameEl=document.querySelector(e),this._descriptionEl=document.querySelector(s),this._avatarEl=document.querySelector(i),this._name=this._nameEl.textContent,this._description=this._descriptionEl.textContent,this._avatar=this._avatarEl.src}_setPage(){this._descriptionEl.textContent=this._description,this._nameEl.textContent=this._name,this._avatarEl.src=this._avatar}getUserInfo(){return{name:this._name,description:this._description}}setUserInfo(t,e){this._name=t,this._description=e,this._setPage()}setAvatar(t){this._avatar=t,this._setPage()}}({nameSelector:"#profile-title",descriptionSelector:"#profile-description",avatarSelector:"#profile-image"});function S(t,e){e.renderLoading(!0),t().then((()=>{e.close()})).catch(B).finally((()=>{e.renderLoading(!1)}))}function L(t){f.open(t.link,t.name)}function k(t){g.open(t)}function C(t){t.isLiked()?u.dislikeCard(t.id).then((()=>{t.setLikeBtnState()})).catch(B):u.likeCard(t.id).then((()=>{t.setLikeBtnState()})).catch(B)}function y(e){return new t(e,"#card-template",L,k,C).getView()}function B(t){console.log(t)}u.getCurrentUser().then((t=>{b.setUserInfo(t.name,t.about),b.setAvatar(t.avatar)})).catch(B),n.addEventListener("click",(()=>{p.setInputValues(b.getUserInfo()),l[c].setButtonState(),l[c].clearValidationErrors(),p.open()})),o.addEventListener("click",(()=>{l[h].setButtonState(),l[h].clearValidationErrors(),E.open()})),a.addEventListener("click",(()=>{l[d].setButtonState(),l[d].clearValidationErrors(),v.open()})),document.querySelector("body").classList.remove("no-transition")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,